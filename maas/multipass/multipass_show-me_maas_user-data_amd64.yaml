#cloud-config
final_message: 'MAAS Show Me Demo Installed in $UPTIME'
merge_how:
 - name: list
   settings: [append]
 - name: dict
   settings: [no_replace, recurse_list]
manage_etc_hosts: false
preserve_hostname: true
prefer_fqdn_over_hostname: true
fqdn: maas.ubuntu-show.me
hostname: maas
locale: en_US.UTF-8
package_update: true
package_upgrade: true
packages: [amtterm, build-essential, git, jq, lynx, maas-cli, maas-common, postgresql-server, postgresql-client, postgresql-common, software-properties-common, ssl-cert, tree, unzip, vim, wsmancli]
apt:
  conf: |
    APT {
      Get {
        Assume-Yes "true";
        Fix-Broken "true";
        Auto-Remove "true";
        Purge "true";
      };
      Acquire {
        ForceIPv4 "true";
        Check-Date "false";
      };
    };
  primary:
    - arches: [amd64]
      uri: 'http://us.archive.ubuntu.com/ubuntu'
      search: ['http://us.archive.ubuntu.com/ubuntu', 'http://us.archive.ubuntu.com/ubuntu']
  security:
    - arches: [amd64]
      uri: 'http://us.archive.ubuntu.com/ubuntu'
      search: ['http://us.archive.ubuntu.com/ubuntu', 'http://us.archive.ubuntu.com/ubuntu']
  sources_list: |
    deb [arch=amd64] $PRIMARY $RELEASE main universe restricted multiverse
    deb [arch=amd64] $PRIMARY $RELEASE-updates main universe restricted multiverse
    deb [arch=amd64] $SECURITY $RELEASE-security main universe restricted multiverse
    deb [arch=amd64] $PRIMARY $RELEASE-backports main universe restricted multiverse
  sources:
    maas-ubuntu-3_1-focal.list:
      source: 'deb [arch=amd64] https://ppa.launchpadcontent.net/maas/3.1/ubuntu focal main'
      keyid: 3AB6DCF1F234E78DAA9C104204E7FDC5684D4A1C
bootcmd:
  - ['cloud-init-per', 'once', 'bc0', 'set', '-x']
  - ['cloud-init-per', 'once', 'net0', 'echo', 'network: {config: disabled}', '>', '/etc/cloud/cloud.cfg.d/99-disable-network-config.cfg']
  - ['cloud-init-per', 'once', 'net1', 'sysctl', '-w', 'net.ipv4.ip_forward=1']
  - ['cloud-init-per', 'once', 'net3', 'echo "precedence ::ffff:0:0/96  100"', '|', 'tee', '1>/dev/null', '-a', '/etc/gai.conf']
  - ['cloud-init-per', 'once', 'net4', 'systemctl', 'restart', 'systemd-networkd', 'systemd-resolved', 'procps.service']
  - |-
    cat <<-NETPLAN|sed -r 's/[ \t]+$//g;/^$/d'|tee 1>/dev/null /etc/netplan/50-cloud-init.yaml
    network:
      version: 2
      renderer: networkd
      ethernets:
        enp0s3:
          dhcp4: false
          dhcp6: false
          optional: false
          accept-ra: false
          link-local: [ ]
          match:
            macaddress: '$(ip -o l show dev enp0s3|grep -oP "(?<=ether )[^ ]+")'
          set-name: enp0s3
        enp0s8:
          dhcp4: false
          dhcp6: false
          optional: false
          accept-ra: false
          link-local: [ ]
          match:
            macaddress: '$(ip -o l show dev enp0s8|grep -oP "(?<=ether )[^ ]+")'
          set-name: enp0s8
      bridges:
        br0:
          macaddress: '$(ip -o l show dev enp0s8|grep -oP "(?<=ether )[^ ]+")'
          interfaces: ['enp0s8']
          link-local: [ ]
          dhcp4: true
          dhcp4-overrides:
            use-dns: false
            use-hostname: false
            use-domains: false
            route-metric: 1
          dhcp6: false
          optional: false
          accept-ra: false
          link-local: [ ]
          nameservers:
            addresses: [8.8.8.8,1.1.1.1]
            search: [ubuntu-show.me]
          parameters:
            priority: 1
            stp: false
        br1:
          macaddress: '$(ip -o l show dev enp0s3|grep -oP "(?<=ether )[^ ]+")'
          interfaces: ['enp0s3']
          link-local: [ ]
          dhcp4: true
          dhcp4-overrides:
            use-dns: false
            use-hostname: false
            use-domains: false
            use-routes: true
            route-metric: 100
          dhcp6: false
          optional: false
          accept-ra: false
          link-local: [ ]
          nameservers:
            addresses: [8.8.8.8,1.1.1.1]
            search: [ubuntu-show.me]
          parameters:
            priority: 100
            stp: false
    NETPLAN
  - ['cloud-init-per', 'once', 'net5', 'echo', 'network: {config: disabled}', '>', '/etc/cloud/cloud.cfg.d/99-disable-network-config.cfg']
  - ['cloud-init-per', 'once', 'net6', 'netplan', '--debug', 'generate']
  - ['cloud-init-per', 'once', 'net7', 'systemctl', 'restart', 'systemd-networkd', 'systemd-resolved', 'procps.service']
  - ['cloud-init-per', 'once', 'net8', 'netplan', '--debug', 'apply']
  - ['cloud-init-per', 'once', 'net9', 'netplan', '--debug', 'apply']
  - ['cloud-init-per', 'once', 'apt0', 'export', 'DEBIAN_FRONTEND=noninteractive']
  - ['cloud-init-per', 'once', 'apt1', 'apt-get', '--option=Acquire::ForceIPv4=true', 'update']
  - ['cloud-init-per', 'once', 'apt2', 'apt-get', 'dist-upgrade', '--option=Acquire::ForceIPv4=true', '--assume-yes', '--quiet', '--auto-remove', '--purge']
  - ['cloud-init-per', 'once', 'apt3', 'apt-get', 'remove', 'lxd', 'lxd-client', '--auto-remove', '--purge', '--assume-yes', '--quiet', '--fix-broken', '--option=Acquire::ForceIPv4=true']
runcmd:
  - set -x
  - export PNIC=br0
  - export DEFAULT_IP=$(ip -o -4 a show $(ip -o r l default|grep $PNIC|grep -m1 -oP "(?<=dev )[^ ]+")|grep -m1 -oP "(?<=inet )[^/]+")
  - sed -i -r "/127.0|$(hostname -s)/d" /etc/hosts
  - sed -i -r "1s/^/127.0.0.1\tlocalhost\n${DEFAULT_IP}\t$(hostname -s).ubuntu-show.me $(hostname -s)\n/" /etc/hosts
  - export DEBIAN_FRONTEND=noninteractive
  - apt update -o "Acquire::ForceIPv4=true"
  - export SHOW_ME_ARCH='amd64'
  - export SHOW_ME_APP='maas'
  - export SHOW_ME_SUBSTRT='aws'
  - export SHOW_ME_GIT="https://github.com/ThinGuy/show-me.git"
  - mkdir -p /etc/show-me/www /etc/show-me/log
  - "echo 'precedence ::ffff:0:0/96  100'|tee 1>/dev/null -a /etc/gai.conf"
  - systemctl restart systemd-networkd systemd-resolved procps.service
  - if [ -d /opt/show-me ];then rm -rf /opt/show-me;fi
  - ping -c10 -w1 github.com
  - git clone https://github.com/ThinGuy/show-me.git /opt/show-me
  - git clone https://github.com/canonical/packer-maas /opt/show-me/packer-maas
  - curl -fSlL -o /opt/show-me/packer_1.8.0_linux_amd64.zip "https://releases.hashicorp.com/packer/1.8.0/packer_1.8.0_linux_${SHOW_ME_ARCH}.zip"
  - if [ -f /opt/show-me/packer_1.8.0_linux_${SHOW_ME_ARCH}.zip ];then unzip -qq -o -d /usr/local/bin /opt/show-me/packer_1.8.0_linux_${SHOW_ME_ARCH}.zip;fi
  - install -o 0 -g 0 -m 0754 /opt/show-me/all/helpers/petname-helper.sh /usr/local/bin/petname-helper.sh
  - install -o 0 -g 0 -m 0400 /opt/show-me/all/pki/ubuntu-show-me-id_rsa /home/$(id -un 1000)/.ssh/showme_rsa
  - install -o 0 -g 0 -m 0640 /opt/show-me/all/pki/ubuntu-show-me-id_rsa.pub /home/$(id -un 1000)/.ssh/showme_rsa.pub
  - install -o 0 -g 0 -m 0644 /opt/show-me/all/pki/ubuntu-show-me-id_rsa.pub /home/$(id -un 1000)/.ssh/authorized_keys
  - install -o 0 -g 0 -m 0755 -d /usr/local/lib/show-me/petname2/
  - install -o 0 -g 0 -m 0754 /opt/show-me/all/helpers/show-me_maas_lxd-init.sh /usr/local/bin/show-me_maas_lxd-init.sh
  - install -o 0 -g 0 -m 0644 /opt/show-me/all/pki/show-me_host.pem /etc/ssl/certs/show-me_host.pem
  - install -o 0 -g 0 -m 0600 /opt/show-me/all/pki/show-me_host.key /etc/ssl/private/show-me_host.key
  - install -o 0 -g 0 -m 0644 /opt/show-me/all/pki/show-me_ca.crt /etc/ssl/certs/show-me_ca.crt
  - install -o 0 -g 0 -m 0754 /opt/show-me/all/helpers/show-me_file-service_init.sh /usr/local/bin/show-me_file-service_init.sh
  - if [ -f /usr/local/bin/show-me_file-service_init.sh ];then /usr/local/bin/show-me_file-service_init.sh;fi
  - if [ -f /etc/ssl/certs/show-me_ca.crt ];then cp -a /etc/ssl/certs/show-me_ca.crt /usr/local/share/ca-certificates/show-me_ca.crt;fi
  - if [ -f /etc/ssl/certs/show-me_host.pem ];then ln -sf /etc/ssl/certs/show-me_ca.crt /etc/show-me/www/.;fi
  - update-ca-certificates --fresh --verbose
  - export PG_DBVER=$(psql -V|awk '{gsub(/\..*$/,"");print $3}')
  - export PG_DBHBA="/etc/postgresql/${PG_DBVER}/main/pg_hba.conf"
  - export PG_DBVER=$(psql -V|awk '{gsub(/\..*$/,"");print $3}')
  - export PG_DBHBA="/etc/postgresql/${PG_DBVER}/main/pg_hba.conf"
  - export PG_DBHOST='maas.ubuntu-show.me'
  - export PG_DBUSER=postgres
  - export PG_DBNAME=postgres PG_DBPORT=5432
  - export PG_DBSSL_CRT=/etc/ssl/certs/show-me_ca.crt
  - export PG_DBSSL_PEM=/etc/ssl/certs/show-me_host.pem
  - export PG_DBSSL_KEY=/etc/ssl/private/show-me_host.key
  - su - postgres -c "psql postgres -c \"ALTER SYSTEM SET ssl to 'on';\""
  - su - postgres -c "psql postgres -c \"ALTER SYSTEM SET ssl_ca_file to '${PG_DBSSL_CRT}';\""
  - su - postgres -c "psql postgres -c \"ALTER SYSTEM SET ssl_cert_file to '${PG_DBSSL_PEM}';\""
  - su - postgres -c "psql postgres -c \"ALTER SYSTEM SET ssl_key_file to '${PG_DBSSL_KEY}';\""
  - su - postgres -c "psql postgres -c \"ALTER SYSTEM SET listen_addresses to '*';\""
  - su - postgres -c "psql postgres -c \"ALTER SYSTEM SET max_connections to '500';\""
  - su - postgres -c "psql postgres -c \"ALTER SYSTEM SET max_prepared_transactions to '500';\""
  - su - postgres -c 'psql postgres -c "SELECT pg_reload_conf();"'
  - su - postgres -c 'psql -P pager=off  postgres -xtc "select name,setting from pg_settings where name SIMILAR TO '"'"'listen%|max%(con|prep)%|ssl|ssl_(ca|cert|key)%'"'"';"'
  - export SSP_DBVER=$(psql -V|awk '{gsub(/\..*$/,"");print $3}')
  - export SSP_DBHBA="/etc/postgresql/${SSP_DBVER}/main/pg_hba.conf"
  - export SSP_DBHOST='maas.ubuntu-show.me' SSP_DBUSER=maas SSP_DBNAME='maasdb' SSP_DBPORT=5432
  - export SSP_DBPASS="$(env LANG=C LC_ALL=C tr 2>/dev/null -dc "[:alnum:]" < /dev/urandom|fold -w12|head -n1)"
  - export SSP_DBCON="postgres://${SSP_DBUSER}:${SSP_DBPASS}@${SSP_DBHOST}:${SSP_DBPORT}/${SSP_DBNAME}"
  - su - postgres -c 'psql -c "CREATE ROLE '${SSP_DBUSER}' WITH SUPERUSER CREATEDB CREATEROLE LOGIN REPLICATION ENCRYPTED PASSWORD '"'"''${SSP_DBPASS}''"'"';"'
  - su - postgres -c 'psql -c "CREATE DATABASE '${SSP_DBNAME}' WITH OWNER '"'"''${SSP_DBUSER}''"'"';"'
  - echo "${SSP_DBHOST}:${SSP_DBPORT}:${SSP_DBNAME}:${SSP_DBUSER}:${SSP_DBPASS}"|su postgres -c 'tee 1>/dev/null /var/lib/postgresql/.pgpass.maas'
  - printf '%-08s%-016s%-016s%-024s%s\n' host ${SSP_DBNAME} ${SSP_DBUSER} '::/0' md5 host ${SSP_DBNAME} ${SSP_DBUSER} '0.0.0.0/0' md5|su - postgres -c 'tee -a '${SSP_DBHBA}''
  - export SSP_DBVER=$(psql -V|awk '{gsub(/\..*$/,"");print $3}')
  - export SSP_DBHBA="/etc/postgresql/${SSP_DBVER}/main/pg_hba.conf"
  - export SSP_DBHOST=maas.ubuntu-show.me SSP_DBUSER=snap-proxy SSP_DBNAME='snap-proxy-db' SSP_DBPORT=5432
  - export SSP_DBPASS="$(env LANG=C LC_ALL=C tr 2>/dev/null -dc "[:alnum:]" < /dev/urandom|fold -w12|head -n1)"
  - export SSP_DBCON="postgres://${SSP_DBUSER}:${SSP_DBPASS}@${SSP_DBHOST}:${SSP_DBPORT}/${SSP_DBNAME}"
  - |-
    cat <<-SQL|su - postgres -c psql
    CREATE ROLE "${SSP_DBUSER}" LOGIN CREATEROLE PASSWORD '${SSP_DBPASS}';
    CREATE DATABASE "${SSP_DBNAME}" OWNER "${SSP_DBUSER}";
    \connect "${SSP_DBNAME}"
    CREATE EXTENSION "btree_gist";
    SQL
  - echo "${SSP_DBHOST}:${SSP_DBPORT}:${SSP_DBNAME}:${SSP_DBUSER}:${SSP_DBPASS}"|su postgres -c 'tee 1>/dev/null /var/lib/postgresql/.pgpass.ssp'
  - printf '%-08s%-016s%-016s%-024s%s\n' host ${SSP_DBNAME} ${SSP_DBUSER} '::/0' md5 host ${SSP_DBNAME} ${SSP_DBUSER} '0.0.0.0/0' md5|su - postgres -c 'tee -a '${SSP_DBHBA}''
  - export CANDID_DBVER=$(psql -V|awk '{gsub(/\..*$/,"");print $3}')
  - export CANDID_DBHBA="/etc/postgresql/${CANDID_DBVER}/main/pg_hba.conf"
  - export CANDID_DBHOST='maas.ubuntu-show.me'
  - export CANDID_DBUSER=candid
  - export CANDID_DBNAME='candiddb'
  - export CANDID_DBPORT=5432
  - export CANDID_DBPASS="$(env LANG=C LC_ALL=C tr 2>/dev/null -dc "[:alnum:]" < /dev/urandom|fold -w12|head -n1)"
  - export CANDID_DBCON="postgres://${CANDID_DBUSER}:${CANDID_DBPASS}@${CANDID_DBHOST}:${CANDID_DBPORT}/${CANDID_DBNAME}"
  - su - postgres -c 'psql -c "CREATE ROLE '${CANDID_DBUSER}' WITH SUPERUSER CREATEDB CREATEROLE LOGIN REPLICATION ENCRYPTED PASSWORD '"'"''${CANDID_DBPASS}''"'"';"'
  - su - postgres -c 'psql -c "CREATE DATABASE '${CANDID_DBNAME}' WITH OWNER '"'"''${CANDID_DBUSER}''"'"';"'
  - echo "${CANDID_DBHOST}:${CANDID_DBPORT}:${CANDID_DBNAME}:${CANDID_DBUSER}:${CANDID_DBPASS}"|su postgres -c 'tee 1>/dev/null /var/lib/postgresql/.pgpass.candid'
  - printf '%-08s%-016s%-016s%-024s%s\n' host ${CANDID_DBNAME} ${CANDID_DBUSER} '::/0' md5 host ${CANDID_DBNAME} ${CANDID_DBUSER} '0.0.0.0/0' md5|su - postgres -c 'tee -a '${CANDID_DBHBA}''
  - export RBAC_DBVER=$(psql -V|awk '{gsub(/\..*$/,"");print $3}')
  - export RBAC_DBHBA="/etc/postgresql/${RBAC_DBVER}/main/pg_hba.conf"
  - export RBAC_DBHOST='maas.ubuntu-show.me'
  - export RBAC_DBUSER=rbac
  - export RBAC_DBNAME='rbacdb'
  - export RBAC_DBPORT=5432
  - export RBAC_DBPASS="$(env LANG=C LC_ALL=C tr 2>/dev/null -dc "[:alnum:]" < /dev/urandom|fold -w12|head -n1)"
  - export RBAC_DBCON="postgres://${RBAC_DBUSER}:${RBAC_DBPASS}@${RBAC_DBHOST}:${RBAC_DBPORT}/${RBAC_DBNAME}"
  - su - postgres -c 'psql -c "CREATE ROLE '${RBAC_DBUSER}' WITH SUPERUSER CREATEDB CREATEROLE LOGIN REPLICATION ENCRYPTED PASSWORD '"'"''${RBAC_DBPASS}''"'"';"'
  - su - postgres -c 'psql -c "CREATE DATABASE '${RBAC_DBNAME}' WITH OWNER '"'"''${RBAC_DBUSER}''"'"';"'
  - echo "${RBAC_DBHOST}:${RBAC_DBPORT}:${RBAC_DBNAME}:${RBAC_DBUSER}:${RBAC_DBPASS}"|su postgres -c 'tee 1>/dev/null /var/lib/postgresql/.pgpass.rbac'
  - printf '%-08s%-016s%-016s%-024s%s\n' host ${RBAC_DBNAME} ${RBAC_DBUSER} '::/0' md5 host ${RBAC_DBNAME} ${RBAC_DBUSER} '0.0.0.0/0' md5|su - postgres -c 'tee -a '${RBAC_DBHBA}''
  - export MAAS_DBVER=$(psql -V|awk '{gsub(/\..*$/,"");print $3}')
  - export MAAS_PROFILE="maas-admin"
  - export MAAS_PASSWORD="ubuntu"
  - export MAAS_URIPORT=5240
  - export MAAS_FQDN='maas.ubuntu-show.me' MAAS_EMAIL='maas-admin@ubuntu-show.me' MAAS_IMPORTID='lp:craig-bender'
  - export MAAS_DBVER=$(psql -V|awk '{gsub(/\..*$/,"");print $3}')
  - export MAAS_DBHBA="/etc/postgresql/${MAAS_DBVER}/main/pg_hba.conf"
  - export MAAS_DBHOST='maas.ubuntu-show.me' MAAS_DBUSER=maas MAAS_DBNAME='maasdb' MAAS_DBPORT=5432
  - export MAAS_DBPASS="$(env LANG=C LC_ALL=C tr 2>/dev/null -dc "[:alnum:]" < /dev/urandom|fold -w12|head -n1)"
  - export MAAS_DBCON="postgres://${MAAS_DBUSER}:${MAAS_DBPASS}@${MAAS_DBHOST}:${MAAS_DBPORT}/${MAAS_DBNAME}"
  - export MAAS_URL="http://${MAAS_FQDN}:${MAAS_URIPORT}/MAAS"
  - su - postgres -c 'psql -c "CREATE ROLE '${MAAS_DBUSER}' WITH SUPERUSER CREATEDB CREATEROLE LOGIN REPLICATION ENCRYPTED PASSWORD '"'"''${MAAS_DBPASS}''"'"';"'
  - su - postgres -c 'psql -c "CREATE DATABASE '${MAAS_DBNAME}' WITH OWNER '"'"''${MAAS_DBUSER}''"'"';"'
  - echo "${MAAS_DBHOST}:${MAAS_DBPORT}:${MAAS_DBNAME}:${MAAS_DBUSER}:${MAAS_DBPASS}"|su postgres -c 'tee 1>/dev/null /var/lib/postgresql/.pgpass.maas'
  - cp -a /var/lib/postgresql/.pgpass* /home/$(id -un 1000)/;chown -R "$(id -un 1000):$(id -un 1000)" /home/$(id -un 1000)/\.*
  - printf '%-08s%-016s%-016s%-024s%s\n' host ${MAAS_DBNAME} ${MAAS_DBUSER} '::/0' md5 host ${MAAS_DBNAME} ${MAAS_DBUSER} '0.0.0.0/0' md5|su - postgres -c 'tee -a '${MAAS_DBHBA}''
  - su - postgres -c 'psql postgres -c "SELECT pg_reload_conf();"'
  - for P in maas SSP RBAC CANDID MAAS PG SHOW_ME;do set|grep "^${P}_";done|sort -uV|tee ~/.show-me.rc|su - $(id -un 1000) -c 'tee ~/.show-me.rc'|su - postgres -c 'tee ~/.show-me.rc'
  - echo 'for RC in $(find ~/ -maxdepth 1 -type f -iname ".show-me*.rc");do source $RC;done'|tee -a /root/.bashrc |su - $(id -un 1000) -c 'tee -a ~/.bashrc'|su - postgres -c 'tee -a ~/.bashrc'
  - apt install maas -o Acquire::ForceIPv4=true -yqf --auto-remove --purge
  - maas init --force --mode=region --maas-url="${MAAS_URL}" --database-host=${MAAS_DBHOST} --database-name=${MAAS_DBNAME} --database-user=${MAAS_DBUSER} --database-pass=${MAAS_DBPASS} --database-port=${MAAS_DBPORT}
  - maas createadmin --username ${MAAS_PROFILE} --password ${MAAS_PASSWORD} --email ${MAAS_EMAIL} --ssh-import "${MAAS_IMPORTID}"
  - maas login ${MAAS_PROFILE} ${MAAS_URL} \$(sudo maas apikey --username=${MAAS_PROFILE})
  - su - $(id -un 1000) -c 'maas login '${MAAS_PROFILE}' '${MAAS_URL}' $(sudo maas apikey --username='${MAAS_PROFILE}')'
  - if $(test -n "$(command 2>/dev/null -v lxd.lxc)");then su - $(id -un 1000) -c 'sudo snap refresh lxd --channel latest/stable';else su - $(id -un 1000) -c 'sudo snap install lxd';fi
  - if [ -f /usr/local/bin/show-me_maas_lxd-init.sh ];then /usr/local/bin/show-me_maas_lxd-init.sh;fi
  - if [ -f /usr/local/bin/show-me/finishing-script.sh ];then /usr/local/bin/show-me/finishing-script.sh;fi
