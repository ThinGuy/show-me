#cloud-config
final_message: 'Landscape Show Me Demo Installed in $UPTIME'
merge_how:
 - name: list
   settings: [append]
 - name: dict
   settings: [no_replace, recurse_list]
manage_etc_hosts: false
prefer_fqdn_over_hostname: true
fqdn: landscape.ubuntu-show.me
hostname: landscape
locale: en_US.UTF-8
package_update: true
package_upgrade: true
packages: [dnsutils, build-essential, debconf-utils, dialog, git, gnupg, jq, lynx, landscape-client, landscape-common, postgresql, postgresql-client, postgresql-common, software-properties-common, ssl-cert, tree, unzip, vim]
apt:
  conf: |
    APT {
      Get {
        Assume-Yes "true";
        Fix-Broken "true";
        Auto-Remove "true";
        Purge "true";
      };
      Acquire {
        ForceIPv4 "true";
        Check-Date "false";
      };
    };
  primary:
    - arches: [amd64]
      uri: 'http://us-west-1.ec2.archive.ubuntu.com/ubuntu'
      search: ['http://us-west-1.ec2.archive.ubuntu.com/ubuntu', 'http://us-west-2.ec2.archive.ubuntu.com/ubuntu']
  security:
    - arches: [amd64]
      uri: 'http://us-west-1.ec2.archive.ubuntu.com/ubuntu'
      search: ['http://us-west-1.ec2.archive.ubuntu.com/ubuntu', 'http://us-west-2.ec2.archive.ubuntu.com/ubuntu']
  sources_list: |
    deb [arch=amd64] $PRIMARY $RELEASE main universe restricted multiverse
    deb [arch=amd64] $PRIMARY $RELEASE-updates main universe restricted multiverse
    deb [arch=amd64] $SECURITY $RELEASE-security main universe restricted multiverse
    deb [arch=amd64] $PRIMARY $RELEASE-backports main universe restricted multiverse
  sources:
    landscape-19.10-bionic.list:
      source: 'deb [arch=amd64] http://ppa.launchpad.net/landscape/19.10/ubuntu bionic main'
      keyid: 6E85A86E4652B4E6
bootcmd:
  - ['cloud-init-per', 'once', 'bc0', 'set', '-x']
  - ['cloud-init-per', 'once', 'net0', 'sysctl', '-w', 'net.ipv4.ip_forward=1']
  - ['cloud-init-per', 'once', 'net1', 'printf', '"%s\x20%s\x20\x20%s\n"', 'precedence', '::ffff:0:0/96', '100', '|', 'tee', '-a', '/etc/gai.conf']
  - ['cloud-init-per', 'once', 'net2', 'ln', '-s', '-f', '/run/systemd/resolve/resolv.conf', '/etc/resolv.conf']
  - ['cloud-init-per', 'once', 'apt0', 'DEBIAN_FRONTEND=noninteractive', 'apt-get', '--option=Acquire::ForceIPv4=true', 'update']
  - ['cloud-init-per', 'once', 'apt1', 'DEBIAN_FRONTEND=noninteractive', 'apt-get', 'dist-upgrade', '--option=Acquire::ForceIPv4=true', '--assume-yes', '--quiet', '--auto-remove', '--purge']
  - ['cloud-init-per', 'once', 'apt2', 'DEBIAN_FRONTEND=noninteractive', 'apt-get', 'install', 'dnsutils', 'debconf-utils', 'dialog', 'gnupg', '--option=Acquire::ForceIPv4=true', '--assume-yes', '--quiet', '--auto-remove', '--purge']
  - ['cloud-init-per', 'once', 'apt3', 'DEBIAN_FRONTEND=noninteractive', 'apt-get', 'remove', 'lxd', 'lxd-client', '--auto-remove', '--purge', '--assume-yes', '--quiet', '--fix-broken', '--option=Acquire::ForceIPv4=true']
runcmd:
  - set -x
  - systemctl restart systemd-networkd systemd-resolved procps.service
  - sleep 5
  - export SHOW_ME_PNIC=ens5
  - export SHOW_ME_ARCH='amd64'
  - export SHOW_ME_APP='landscape'
  - export SHOW_ME_SUBSTRT='aws'
  - export SHOW_ME_GIT="https://github.com/ThinGuy/show-me.git"
  - export DEBIAN_FRONTEND=noninteractive
  - "export PYTHONWARNINGS='ignore::DeprecationWarning'"
  - echo "export PYTHONWARNINGS='ignore::DeprecationWarning'"|tee -a 1>/dev/null /etc/environment
  - if [ -f /usr/bin/vim.basic ];then echo "export EDITOR='/usr/bin/vim.basic'"|tee -a 1>/dev/null /etc/environment;fi
  - export DEFAULT_IP="$(ip -o -4 a show $(ip -o r l default|grep ${SHOW_ME_PNIC}|grep -m1 -oP '(?<=dev )[^ ]+')|grep -m1 -oP '(?<=inet )[^/]+')"
  - export PUBLIC_IP_LIST="$(printf '%s\n' $(dig +short myip.opendns.com @resolver1.opendns.com) $(dig TXT +short o-o.myaddr.l.google.com @ns1.google.com|sed -r 's/\x22//g') $(dig +short txt ch whoami.cloudflare @1.0.0.1|sed -r 's/\x22//g'))"
  - if [ $(echo "${PUBLIC_IP_LIST}"|uniq -D|wc -l) -eq 3 ];then export PUBLIC_IP=$(echo "${PUBLIC_IP_LIST}"|uniq -d);fi
  - if [ -n $DEFAULT_IP -o -n $PUBLIC_IP ];then sed -i -r "/127.0|$(hostname -s)/d" /etc/hosts;fi
  - if [ -n $DEFAULT_IP ];then sed -i -r "1s/^/127.0.0.1\tlocalhost\n${DEFAULT_IP}\t$(hostname -s).ubuntu-show.me $(hostname -s)\n/" /etc/hosts;fi
  - if [ -n $PUBLIC_IP ];then sed -r -i "/$(hostname -s)$/a $PUBLIC_IP\t$(hostname -s).ubuntu-show.me $(hostname -s)\n/";fi
  - systemctl restart systemd-networkd systemd-resolved procps.service
  - for i in SHOW_ME_PNIC SHOW_ME_ARCH SHOW_ME_APP SHOW_ME_SUBSTRT SHOW_ME_GIT EDITOR PYTHONWARNINGS PUBLIC_IP DEFAULT_IP;do if [ -n "$(eval echo -n \"\$${i}\")" ];then printf "export ${i}=\x22$(eval echo -n \$$i)\x22\n";fi;done|tee -a 1>/dev/null /etc/environment
  - . /etc/environment
  - mkdir -p /etc/show-me/www /etc/show-me/log
  - if [ -d /opt/show-me ];then rm -rf /opt/show-me;fi
  - ping -c10 -w1 github.com
  - sleep 10
  - git clone https://github.com/ThinGuy/show-me.git /opt/show-me
  - install -o 0 -g 0 -m 0755 /opt/show-me/all/helpers/petname-helper.sh /usr/local/bin/petname-helper.sh
  - install -o 0 -g 0 -m 0755 /opt/show-me/all/helpers/show-me_lynx-web-init.sh /usr/local/bin/show-me_lynx-web-init.sh
  - install -o 0 -g 0 -m 0755 /opt/show-me/all/helpers/add-landscape-clients.sh/usr/local/bin/add-landscape-clients.sh
  - install -o 0 -g 0 -m 0400 /opt/show-me/all/pki/ubuntu-show-me-id_rsa /home/$(id -un 1000)/.ssh/showme_rsa
  - install -o 0 -g 0 -m 0640 /opt/show-me/all/pki/ubuntu-show-me-id_rsa.pub /home/$(id -un 1000)/.ssh/showme_rsa.pub
  - install -o 0 -g 0 -m 0644 /opt/show-me/all/pki/ubuntu-show-me-id_rsa.pub /home/$(id -un 1000)/.ssh/authorized_keys
  - install -o 0 -g 0 -m 0644 -D /opt/show-me/all/helpers/landscape.lynx /usr/local/lib/show-me/landscape.lynx
  - install -o 0 -g 0 -m 0755 -d /usr/local/lib/show-me/petname2/
  - install -o 0 -g 0 -m 0755 /opt/show-me/all/helpers/show-me_landscape_lxd-init.sh /usr/local/bin/show-me_landscape_lxd-init.sh
  - install -o 0 -g 0 -m 0644 /opt/show-me/all/pki/show-me_host.pem /etc/ssl/certs/show-me_host.pem
  - install -o 0 -g 0 -m 0600 /opt/show-me/all/pki/show-me_host.key /etc/ssl/private/show-me_host.key
  - install -o 0 -g 0 -m 0644 /opt/show-me/all/pki/show-me_ca.crt /etc/ssl/certs/show-me_ca.crt
  - install -o 0 -g 0 -m 0644 /opt/show-me/all/pki/show-me_host.pem /etc/ssl/certs/landscape_server.pem
  - install -o 0 -g 0 -m 0600 /opt/show-me/all/pki/show-me_host.key /etc/ssl/private/landscape_server.key
  - install -o 0 -g 0 -m 0644 /opt/show-me/all/pki/show-me_ca.crt /etc/ssl/certs/landscape_server_ca.crt
  - install -o 0 -g 0 -m 0754 /opt/show-me/all/helpers/show-me_file-service_init.sh /usr/local/bin/show-me_file-service_init.sh
  - install -o 0 -g 0 -m 0754 /opt/show-me/all/helpers/show-me_finishing-script_all.sh /usr/local/bin/show-me_finishing-script_all.sh
  - install -o 0 -g 0 -m 0644 /opt/show-me/all/pki/show-me_ca.crt /etc/show-me/www/show-me_ca.crt
  - install -o 0 -g 0 -m 0644 /opt/show-me/all/pki/show-me_host.pem /etc/show-me/www/landscape_server.pem
  - update-ca-certificates --fresh --verbose
  - export PG_DBSSL_CRT=/etc/ssl/certs/landscape_server_ca.crt
  - export PG_DBSSL_PEM=/etc/ssl/certs/landscape_server.pem
  - export PG_DBSSL_KEY=/etc/ssl/private/landscape_server.key
  - su - postgres -c "psql postgres -c \"ALTER SYSTEM SET ssl to 'on';\""
  - su - postgres -c "psql postgres -c \"ALTER SYSTEM SET ssl_ca_file to '${PG_DBSSL_CRT}';\""
  - su - postgres -c "psql postgres -c \"ALTER SYSTEM SET ssl_cert_file to '${PG_DBSSL_PEM}';\""
  - su - postgres -c "psql postgres -c \"ALTER SYSTEM SET ssl_key_file to '${PG_DBSSL_KEY}';\""
  - su - postgres -c "psql postgres -c \"ALTER SYSTEM SET listen_addresses to '*';\""
  - su - postgres -c "psql postgres -c \"ALTER SYSTEM SET max_connections to '500';\""
  - su - postgres -c "psql postgres -c \"ALTER SYSTEM SET max_prepared_transactions to '500';\""
  - su - postgres -c 'psql postgres -c "SELECT pg_reload_conf();"'
  - |-
    cat <<SUDOERS|sed -r 's/[ \t]+$//g;/^$/d'|sudo tee 1>/dev/null /etc/sudoers.d/99-default-user
    Defaults	env_reset
    Defaults	env_keep+="CANDID_* DISPLAY EDITOR HOME LANDSCAPE_* LANG* MAAS_* PG_* PYTHONWARNINGS RBAC_* SHOW_ME* SSP_* XAUTHORITY XAUTHORIZATION *_IP *_PROXY *_proxy"
    Defaults	secure_path="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin:$HOME/.local/bin"
    $(id -un 1000)		ALL=(ALL) NOPASSWD:ALL
    SUDOERS
  - apt install landscape-server-quickstart landscape-client -yqf --reinstall
  - if [ -f /etc/ssl/certs/show-me_host.pem ];then ln -sf /etc/ssl/certs/show-me_host.pem /etc/landscape/landscape_server.pem;fi
  - if [ -f /etc/ssl/certs/show-me_ca.crt ];then ln -sf /etc/ssl/certs/show-me_ca.crt /etc/landscape/landscape_server_ca.crt;fi
  - if [ -L /etc/ssl/certs/landscape_server.pem ];then echo "ssl_public_key = /etc/ssl/certs/landscape_server.pem"|tee 1>/dev/null -a /etc/landscape/client.conf;fi
  - if [ -f /usr/local/lib/show-me/landscape.lynx -a  -f /usr/local/bin/show-me_lynx-web-init.sh ];then  /usr/local/bin/show-me_lynx-web-init.sh;fi
  - if [ -f /etc/landscape/client.conf ];then ln -sf /etc/landscape/client.conf /etc/show-me/www/landscape-client.conf;fi
  - landscape-config -k /etc/landscape/landscape_server.pem -t $(hostname -s) -u "https://$(hostname -s).ubuntu-show.me/message-system" --ping-url "http://$(hostname -s).ubuntu-show.me/ping" -a standalone --http-proxy= --https-proxy= --script-users=ALL --access-group=global --tags=show-me-demo,ubuntu --silent --log-level=debug
  - if $(test -n "$(command 2>/dev/null -v lxd.lxc)");then su - $(id -un 1000) -c 'sudo snap refresh lxd --channel latest/stable';else su - $(id -un 1000) -c 'sudo snap install lxd';fi
  - if [ -f /usr/local/bin/show-me_landscape_lxd-init.sh ];then /usr/local/bin/show-me_landscape_lxd-init.sh;fi
  - if [ -f /usr/local/bin/show-me_file-service_init.sh ];then /usr/local/bin/show-me_file-service_init.sh;fi
  - if [ -f /usr/local/bin/show-me/show-me_finishing-script_all.sh ];then /usr/local/bin/show-me/show-me_finishing-script_all.sh;fi
