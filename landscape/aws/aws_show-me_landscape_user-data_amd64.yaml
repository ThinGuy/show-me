#cloud-config
final_message: 'Landscape Show Me Demo Installed in $UPTIME'
merge_how:
 - name: list
   settings: [append]
 - name: dict
   settings: [no_replace, recurse_list]
manage_etc_hosts: false
prefer_fqdn_over_hostname: true
fqdn: landscape.ubuntu-show.me
hostname: landscape
locale: en_US.UTF-8
package_update: true
package_upgrade: true
packages: [build-essential, git, jq, lynx, landscape-client, landscape-common, postgresql-server, postgresql-client, postgresql-common, software-properties-common, ssl-cert, tree, unzip, vim]
apt:
  conf: |
    APT {
      Get {
        Assume-Yes "true";
        Fix-Broken "true";
        Auto-Remove "true";
        Purge "true";
      };
      Acquire {
        ForceIPv4 "true";
        Check-Date "false";
      };
    };
  primary:
    - arches: [amd64]
      uri: 'http://us-west-1.ec2.archive.ubuntu.com/ubuntu'
      search: ['http://us-west-1.ec2.archive.ubuntu.com/ubuntu', 'http://us-west-2.ec2.archive.ubuntu.com/ubuntu']
  security:
    - arches: [amd64]
      uri: 'http://us-west-1.ec2.archive.ubuntu.com/ubuntu'
      search: ['http://us-west-1.ec2.archive.ubuntu.com/ubuntu', 'http://us-west-2.ec2.archive.ubuntu.com/ubuntu']
  sources_list: |
    deb [arch=amd64] $PRIMARY $RELEASE main universe restricted multiverse
    deb [arch=amd64] $PRIMARY $RELEASE-updates main universe restricted multiverse
    deb [arch=amd64] $SECURITY $RELEASE-security main universe restricted multiverse
    deb [arch=amd64] $PRIMARY $RELEASE-backports main universe restricted multiverse
  sources:
    landscape-19.10-bionic.list:
      source: 'deb [arch=amd64] http://ppa.launchpad.net/landscape/19.10/ubuntu bionic main'
      keyid: 6E85A86E4652B4E6
bootcmd:
  - ['cloud-init-per', 'once', 'bc0', 'set', '-x']
  - ['cloud-init-per', 'once', 'net0', 'echo', 'network: {config: disabled}', '>', '/etc/cloud/cloud.cfg.d/99-disable-network-config.cfg']
  - ['cloud-init-per', 'once', 'net1', 'sysctl', '-w', 'net.ipv4.ip_forward=1']
  - ['cloud-init-per', 'once', 'net3', 'echo "precedence ::ffff:0:0/96  100"', '|', 'tee', '1>/dev/null', '-a', '/etc/gai.conf']
  - ['cloud-init-per', 'once', 'net4', 'systemctl', 'restart', 'systemd-networkd', 'systemd-resolved', 'procps.service']
  - |-
    cat <<-NETPLAN|sed -r 's/[ \t]+$//g;/^$/d'|tee 1>/dev/null /etc/netplan/50-cloud-init.yaml
    network:
      version: 2
      renderer: networkd
      ethernets:
        ens5:
          dhcp4: false
          dhcp6: false
          optional: false
          accept-ra: false
          link-local: [ ]
          match:
            macaddress: '$(ip -o l show dev ens5|grep -oP "(?<=ether )[^ ]+")'
          set-name: ens5
      bridges:
        br0:
          macaddress: '$(ip -o l show dev ens5|grep -oP "(?<=ether )[^ ]+")'
          interfaces: ['ens5']
          link-local: [ ]
          dhcp4: true
          dhcp4-overrides:
            use-dns: false
            use-hostname: false
            use-domains: false
            route-metric: 1
          dhcp6: false
          optional: false
          accept-ra: false
          link-local: [ ]
          nameservers:
            addresses: [9.9.9.9,1.1.1.1]
            search: [ubuntu-show.me]
          parameters:
            priority: 1
            stp: false
    NETPLAN
  - ['cloud-init-per', 'once', 'net5', 'echo', 'network: {config: disabled}', '>', '/etc/cloud/cloud.cfg.d/99-disable-network-config.cfg']
  - ['cloud-init-per', 'once', 'net6', 'netplan', '--debug', 'generate']
  - ['cloud-init-per', 'once', 'net7', 'systemctl', 'restart', 'systemd-networkd', 'systemd-resolved', 'procps.service']
  - ['cloud-init-per', 'once', 'net8', 'netplan', '--debug', 'apply']
  - ['cloud-init-per', 'once', 'net9', 'netplan', '--debug', 'apply']
  - ['cloud-init-per', 'once', 'apt0', 'export', 'DEBIAN_FRONTEND=noninteractive']
  - ['cloud-init-per', 'once', 'apt1', 'apt-get', '--option=Acquire::ForceIPv4=true', 'update']
  - ['cloud-init-per', 'once', 'apt2', 'apt-get', 'dist-upgrade', '--option=Acquire::ForceIPv4=true', '--assume-yes', '--quiet', '--auto-remove', '--purge']
  - ['cloud-init-per', 'once', 'apt3', 'apt-get', 'remove', 'lxd', 'lxd-client', '--auto-remove', '--purge', '--assume-yes', '--quiet', '--fix-broken', '--option=Acquire::ForceIPv4=true']
runcmd:
  - set -x
  - export PNIC=br0
  - export DEFAULT_IP=$(ip -o -4 a show $(ip -o r l default|grep $PNIC|grep -m1 -oP "(?<=dev )[^ ]+")|grep -m1 -oP "(?<=inet )[^/]+")
  - sed -i -r "/127.0|$(hostname -s)/d" /etc/hosts
  - sed -i -r "1s/^/127.0.0.1\tlocalhost\n${DEFAULT_IP}\t$(hostname -s).ubuntu-show.me $(hostname -s)\n/" /etc/hosts
  - export DEBIAN_FRONTEND=noninteractive
  - apt update -o "Acquire::ForceIPv4=true"
  - export SHOW_ME_ARCH='amd64'
  - export  SHOW_ME_APP='landscape'
  - SHOW_ME_SUBSTRT='aws'
  - SHOW_ME_GIT="https://github.com/ThinGuy/show-me.git"
  - mkdir -p /etc/show-me/www /etc/show-me/log
  - "echo 'precedence ::ffff:0:0/96  100'|tee 1>/dev/null -a /etc/gai.conf"
  - systemctl restart systemd-networkd systemd-resolved procps.service
  - if [ -d /opt/show-me ];then rm -rf /opt/show-me;fi
  - ping -c10 -w1 github.com
  - sleep 10
  - git clone https://github.com/ThinGuy/show-me.git /opt/show-me
  - install -o 0 -g 0 -m 0755 /opt/show-me/all/helpers/petname-helper.sh /usr/local/bin/petname-helper.sh
  - install -o 0 -g 0 -m 0755 /opt/show-me/all/helpers/show-me_lynx-web-init.sh /usr/local/bin/show-me_lynx-web-init.sh
  - install -o 0 -g 0 -m 0755 /opt/show-me/all/helpers/add-landscape-clients.sh/usr/local/bin/add-landscape-clients.sh
  - install -o 0 -g 0 -m 0400 /opt/show-me/all/pki/ubuntu-show-me-id_rsa /home/$(id -un 1000)/.ssh/showme_rsa
  - install -o 0 -g 0 -m 0640 /opt/show-me/all/pki/ubuntu-show-me-id_rsa.pub /home/$(id -un 1000)/.ssh/showme_rsa.pub
  - install -o 0 -g 0 -m 0644 /opt/show-me/all/pki/ubuntu-show-me-id_rsa.pub /home/$(id -un 1000)/.ssh/authorized_keys
  - install -o 0 -g 0 -m 0644 -D /opt/show-me/all/helpers/landscape.lynx /usr/local/lib/show-me/landscape.lynx
  - install -o 0 -g 0 -m 0755 -d /usr/local/lib/show-me/petname2/
  - install -o 0 -g 0 -m 0755 /opt/show-me/all/helpers/show-me_landscape_lxd-init.sh /usr/local/bin/show-me_landscape_lxd-init.sh
  - install -o 0 -g 0 -m 0644 /opt/show-me/all/pki/show-me_host.pem /etc/ssl/certs/show-me_host.pem
  - install -o 0 -g 0 -m 0600 /opt/show-me/all/pki/show-me_host.key /etc/ssl/private/show-me_host.key
  - install -o 0 -g 0 -m 0644 /opt/show-me/all/pki/show-me_ca.crt /etc/ssl/certs/show-me_ca.crt
  - install -o 0 -g 0 -m 0754 /opt/show-me/all/helpers/show-me_file-service_init.sh /usr/local/bin/show-me_file-service_init.sh
  - install -o 0 -g 0 -m 0754 /opt/show-me/all/helpers/finishing-script.sh /usr/local/bin/finishing-script.sh
  - if [ -f /etc/ssl/certs/show-me_ca.crt ];then cp -a /etc/ssl/certs/show-me_ca.crt /usr/local/share/ca-certificates/show-me_ca.crt;fi
  - if [ -f /etc/ssl/certs/show-me_ca.crt ];then ln -sf /etc/ssl/certs/show-me_ca.crt /etc/ssl/certs/landscape_server_ca.crt;fi
  - if [ -f /etc/ssl/certs/show-me_host.pem ];then ln -sf /etc/ssl/certs/show-me_host.pem /etc/ssl/certs/landscape_server.pem;fi
  - if [ -f /etc/ssl/private/show-me_host.key ];then ln -sf /etc/ssl/private/show-me_host.key /etc/ssl/certs/landscape_server.key;fi
  - if [ -f /etc/ssl/certs/show-me_host.pem ];then ln -sf /etc/ssl/certs/show-me_ca.crt /etc/show-me/www/landscape_server.pem;fi
  - if [ -f /etc/ssl/certs/show-me_ca.crt ];then ln -sf /etc/ssl/certs/show-me_ca.crt /etc/ssl/certs/landscape_server_ca.crt;fi
  - update-ca-certificates --fresh --verbose
  - export PG_DBSSL_CRT=/etc/ssl/certs/landscape_server_ca.crt
  - export PG_DBSSL_PEM=/etc/show-me/www/landscape_server.pem
  - export PG_DBSSL_KEY=/etc/ssl/certs/landscape_server.key
  - su - postgres -c "psql postgres -c \"ALTER SYSTEM SET ssl to 'on';\""
  - su - postgres -c "psql postgres -c \"ALTER SYSTEM SET ssl_ca_file to '${PG_DBSSL_CRT}';\""
  - su - postgres -c "psql postgres -c \"ALTER SYSTEM SET ssl_cert_file to '${PG_DBSSL_PEM}';\""
  - su - postgres -c "psql postgres -c \"ALTER SYSTEM SET ssl_key_file to '${PG_DBSSL_KEY}';\""
  - su - postgres -c "psql postgres -c \"ALTER SYSTEM SET listen_addresses to '*';\""
  - su - postgres -c "psql postgres -c \"ALTER SYSTEM SET max_connections to '500';\""
  - su - postgres -c "psql postgres -c \"ALTER SYSTEM SET max_prepared_transactions to '500';\""
  - su - postgres -c 'psql postgres -c "SELECT pg_reload_conf();"'
  - apt install landscape-server-quickstart landscape-client -yqf --reinstall
  - if [ -f /etc/ssl/certs/show-me_host.pem ];then ln -sf /etc/ssl/certs/show-me_host.pem /etc/landscape/landscape_server.crt;fi
  - if [ -L /etc/landscape/landscape_server.crt ];then echo "ssl_public_key = /etc/ssl/certs/landscape_server.crt"|tee 1>/dev/null -a /etc/landscape/client.conf;fi
  - if [ -f /usr/local/lib/show-me/landscape.lynx -a  -f /usr/local/bin/show-me_lynx-web-init.sh ];then  /usr/local/bin/show-me_lynx-web-init.sh;fi
  - if [ -f /etc/landscape/client.conf ];then ln -sf /etc/landscape/client.conf /etc/show-me/www/landscape-client.conf;fi
  - landscape-config -k /etc/landscape/landscape_server.pem -t $(hostname -s) -u "https://$(hostname -s).ubuntu-show.me/message-system" --ping-url "http://$(hostname -s).ubuntu-show.me/ping" -a standalone --http-proxy= --https-proxy= --script-users=ALL --access-group=global --tags=show-me-demo,ubuntu --silent --log-level=debug
  - if $(test -n "$(command 2>/dev/null -v lxd.lxc)");then su - $(id -un 1000) -c 'sudo snap refresh lxd --channel latest/stable';else su - $(id -un 1000) -c 'sudo snap install lxd';fi
  - if [ -f /usr/local/bin/show-me_landscape_lxd-init.sh ];then /usr/local/bin/show-me_landscape_lxd-init.sh;fi
  - if [ -f /usr/local/bin/show-me_file-service_init.sh ];then /usr/local/bin/show-me_file-service_init.sh;fi
  - if [ -f /usr/local/bin/show-me/finishing-script.sh ];then /usr/local/bin/show-me/finishing-script.sh;fi
