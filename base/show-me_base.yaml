#cloud-config
final_message: 'Ubuntu Show Me Demo Installed in $UPTIME'
merge_how:
 - name: list
   settings: [append]
 - name: dict
   settings: [no_replace, recurse_list]
manage_etc_hosts: false
timezone: America/Los_Angeles
locale: en_US.UTF-8
package_update: true
package_upgrade: true
packages: [dnsutils, build-essential, debconf-utils, dialog, git, gnupg, jq, lynx, landscape-client, software-properties-common, ssl-cert, tree, unzip, vim]
apt:
  conf: |
    APT {
      Get {
        Assume-Yes "true";
        Fix-Broken "true";
        Auto-Remove "true";
        Purge "true";
      };
      Acquire {
        ForceIPv4 "true";
        Check-Date "false";
      };
    };
  primary:
    - arches: [amd64]
      uri: 'http://us-west-1.ec2.archive.ubuntu.com/ubuntu'
      search: ['http://us-west-1.ec2.archive.ubuntu.com/ubuntu', 'http://us-west-2.ec2.archive.ubuntu.com/ubuntu']
  security:
    - arches: [amd64]
      uri: 'http://us-west-1.ec2.archive.ubuntu.com/ubuntu'
      search: ['http://us-west-1.ec2.archive.ubuntu.com/ubuntu', 'http://us-west-2.ec2.archive.ubuntu.com/ubuntu']
  sources_list: |
    deb [arch=amd64] $PRIMARY $RELEASE main universe restricted multiverse
    deb [arch=amd64] $PRIMARY $RELEASE-updates main universe restricted multiverse
    deb [arch=amd64] $SECURITY $RELEASE-security main universe restricted multiverse
    deb [arch=amd64] $PRIMARY $RELEASE-backports main universe restricted multiverse
  sources:
    landscape-19.10-bionic.list:
      source: 'deb [arch=amd64] http://ppa.launchpad.net/landscape/19.10/ubuntu bionic main'
      keyid: 6E85A86E4652B4E6
bootcmd:
  - export DEBIAN_FRONTEND=noninteractive
  - set -x
  - export CLOUD_BRIDGE=br0
  - export CLOUD_ETH=$(ip -o r l default|grep -m1 -oP "(?<=dev )[^ ]+")
  - export INTERNAL_IP=$(ip -o -4 a show $(ip -o r l default|grep ${CLOUD_ETH}|grep -m1 -oP "(?<=dev )[^ ]+")|grep -m1 -oP "(?<=inet )[^/]+")
  - export IFQDN=$(hostname -s).us-west-1.compute.internal
  - export IHOST=${IFQDN%%.*}
  - exoirt IDOMAIN=${IFQDN#*.}
  - export PUBLIC_IP=$(dig +short myip.opendns.com @resolver1.opendns.com)
  - export PFQDN=$(dig +short -x $PUBLIC_IP|sed 's,\.$,,g')
  - export PHOST=${PFQDN%%.*}
  - export PDOMAIN=${PFQDN#*.}
  - sed -r -i "/127.0|$(hostname -s)/d" /etc/hosts
  - sed -r -i "1s/^/127.0.0.1\tlocalhost\n${PUBLIC_IP}\t${PHOST}.${PDOMAIN} ${PHOST}\n${INTERNAL_IP}\t${IHOST}.${IDOMAIN} ${IHOST}\n/" /etc/hosts
  - hostname ${PHOST}
  - echo ${PHOST}|tee 1>/devnull /etc/hostname
  - systemctl restart systemd-resolved
  - ['cloud-init-per', 'once', 'net0', 'sysctl', '-w', 'net.ipv4.ip_forward=1']
  - ['cloud-init-per', 'once', 'net1', 'ln', '-s', '-f', '/run/systemd/resolve/resolv.conf', '/etc/resolv.conf']
  - ['cloud-init-per', 'once', 'net2', 'printf', '"%s\x20%s\x20\x20%s\n"', 'precedence', '::ffff:0:0/96', '100', '|', 'tee', '-a', '/etc/gai.conf']
  - |-
    cat <<-NETPLAN|sed -r 's/[ \t]+$//g;/^$/d'|tee 1>/dev/null /etc/netplan/50-cloud-init.yaml
    network:
      version: 2
      renderer: networkd
      ethernets:
        ${CLOUD_ETH}:
          dhcp4: false
          dhcp6: false
          optional: false
          accept-ra: false
          link-local: [ ]
          match:
            macaddress: '$(ip -o l show dev ${CLOUD_ETH}|grep -oP "(?<=ether )[^ ]+")'
          set-name: ${CLOUD_ETH}
      bridges:
        ${CLOUD_BRIDGE}:
          macaddress: '$(ip -o l show dev ${CLOUD_ETH}grep -oP "(?<=ether )[^ ]+")'
          interfaces: ['${CLOUD_ETH}']
          link-local: [ ]
          dhcp4: true
          dhcp4-overrides:
            use-hostname: false
            hostname: ${PHOST}
            use-domains: false
          dhcp6: false
          optional: false
          accept-ra: false
          link-local: [ ]
          nameservers:
            addresses: [169.254.169.253,1.1.1.1]
            search: [~us-west-1.compute.amazonaws.com,us-west-1.compute.internal]
          parameters:
            priority: 1
            stp: false
    NETPLAN
  - ['cloud-init-per', 'once', 'net3', 'ln', '-s', '-f', '/run/systemd/resolve/resolv.conf', '/etc/resolv.conf']    
  - ['cloud-init-per', 'once', 'net4', 'netplan', '--debug', 'generate']
  - ['cloud-init-per', 'once', 'net5', 'netplan', '--debug', 'apply']
  - ['cloud-init-per', 'once', 'net6', 'ip', 'addr', 'flush', 'ens5']
  - ['cloud-init-per', 'once', 'net7', 'echo', 'network: {config: disabled}', '>', '/etc/cloud/cloud.cfg.d/99-disable-network-config.cfg']
  - ['cloud-init-per', 'once', 'apt0',  'apt-get', '--option=Acquire::ForceIPv4=true', 'update']
  - ['cloud-init-per', 'once', 'apt1',  'apt-get', 'dist-upgrade', '--option=Acquire::ForceIPv4=true', '--assume-yes', '--quiet', '--auto-remove', '--purge']
  - ['cloud-init-per', 'once', 'apt2',  'apt-get', 'install', 'dnsutils', 'debconf-utils', 'dialog', 'gnupg', '--option=Acquire::ForceIPv4=true', '--assume-yes', '--quiet', '--auto-remove', '--purge']
  - ['cloud-init-per', 'once', 'apt3',  'apt-get', 'remove', 'lxd', 'lxd-client', '--auto-remove', '--purge', '--assume-yes', '--quiet', '--fix-broken', '--option=Acquire::ForceIPv4=true']
runcmd:
  - set -x
  - sleep 5
  - export CLOUD_BRIDGE=br0
  - export CLOUD_ARCH='amd64'
  - export CLOUD_APP='landscape'
  - export CLOUD_PARTITION='aws'
  - export CLOUD_APP_GIT="https://github.com/ThinGuy/show-me.git"
  - export DEBIAN_FRONTEND=noninteractive
  - "export PYTHONWARNINGS='ignore::DeprecationWarning'"
  - echo "export PYTHONWARNINGS='ignore::DeprecationWarning'"|tee -a 1>/dev/null /etc/environment
  - if [ -f /usr/bin/vim.basic ];then echo "export EDITOR='/usr/bin/vim.basic'"|tee -a 1>/dev/null /etc/environment;fi
  - export CLOUD_BRIDGE=br0
  - export INTERNAL_IP=$(ip -o -4 a show $(ip -o r l default|grep ${CLOUD_BRIDGE}|grep -m1 -oP "(?<=dev )[^ ]+")|grep -m1 -oP "(?<=inet )[^/]+")
  - export IFQDN=$(hostname -s).us-west-1.compute.internal
  - export IHOST=${IFQDN%%.*}
  - exoirt IDOMAIN=${IFQDN#*.}
  - export PUBLIC_IP=$(dig +short myip.opendns.com @resolver1.opendns.com)
  - export PFQDN=$(dig +short -x $PUBLIC_IP|sed 's,\.$,,g')
  - export PHOST=${PFQDN%%.*}
  - export PDOMAIN=${PFQDN#*.}
  - sed -r -i "/127.0|$(hostname -s)/d" /etc/hosts
  - sed -r -i "1s/^/127.0.0.1\tlocalhost\n${PUBLIC_IP}\t${PHOST}.${PDOMAIN} ${PHOST}\n${INTERNAL_IP}\t${IHOST}.${IDOMAIN} ${IHOST}\n/" /etc/hosts
  - hostname ${PHOST}
  - echo ${PHOST}|tee 1>/devnull /etc/hostname
  - systemctl restart systemd-resolved
  - for i in CLOUD_BRIDGE CLOUD_ARCH CLOUD_APP CLOUD_PARTITION CLOUD_APP_GIT EDITOR PYTHONWARNINGS PUBLIC_IP INTERNAL_IP;do if [ -n "$(eval echo -n \"\$${i}\")" ];then printf "export ${i}=\x22$(eval echo -n \$$i)\x22\n";fi;done|tee -a 1>/dev/null /etc/environment
  - . /etc/environment
  - mkdir -p /etc/show-me/www /etc/show-me/log
  - if [ -d /opt/show-me ];then rm -rf /opt/show-me;fi
  - ping -c10 -w5 github.com
  - sleep 10
  - if [ -f /home/$(id -un 1000)/.showme.rc ];then . /home/$(id -un 1000)/.showme.rc;fi
  - |-
    cat <<-'SUDOERS'|sed -r -i 's/[ \t]+$//g;/^$/d'|sudo tee 1>/dev/null /etc/sudoers.d/99-default-user
    Defaults	env_reset
    Defaults	env_keep+="CANDID_* DISPLAY EDITOR HOME LANDSCAPE_* LANG* MAAS_* PG_* PYTHONWARNINGS RBAC_* SSP_* XAUTHORITY XAUTHORIZATION *_IP *_PROXY *_proxy"
    Defaults	secure_path="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin:$HOME/.local/bin"
    $(id -un 1000)		ALL=(ALL) NOPASSWD:ALL
    SUDOERS

